{"ast":null,"code":"import _toConsumableArray from\"C:/Users/gonza/Desktop/Henry/PI Pokemon Front/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/gonza/Desktop/Henry/PI Pokemon Front/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_ALL_POKEMONS,GET_POKEMON_BY_NAME,GET_POKEMON_DETAIL,GET_ALL_TYPES,CLEAR_DETAIL,FILTER_TYPE,FILTER_BY_SOURCE,ORDER_POKEMON}from\"./actions\";var initialState={allPokemons:[],pokemons:[],allTypes:[],detail:[]};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_ALL_POKEMONS:return _objectSpread(_objectSpread({},state),{},{allPokemons:action.payload,pokemons:action.payload});case GET_POKEMON_BY_NAME:return _objectSpread(_objectSpread({},state),{},{pokemons:action.payload});case GET_POKEMON_DETAIL:return _objectSpread(_objectSpread({},state),{},{detail:action.payload});case CLEAR_DETAIL:return _objectSpread(_objectSpread({},state),{},{detail:{}});case GET_ALL_TYPES:return _objectSpread(_objectSpread({},state),{},{allTypes:action.payload});case FILTER_TYPE:var allPokemonsType=_toConsumableArray(state.allPokemons);var typeFiltered=action.payload==='all'?allPokemonsType:allPokemonsType.filter(function(poke){return poke.types.some(function(type){return type.name===action.payload;});});return _objectSpread(_objectSpread({},state),{},{pokemons:typeFiltered});case FILTER_BY_SOURCE:var allPokemons=_toConsumableArray(state.allPokemons);var filter=action.payload===\"created\"?allPokemons.filter(function(p){return p.created;}):allPokemons.filter(function(p){return!p.created;});return _objectSpread(_objectSpread({},state),{},{pokemons:action.payload===\"all\"?allPokemons:filter});case ORDER_POKEMON:var allPokemonsCopy=_toConsumableArray(state.allPokemons);var order;switch(action.payload){case\"asc\":order=allPokemonsCopy.sort(function(a,b){if(a.name>b.name)return 1;if(b.name>a.name)return-1;return 0;});break;case\"des\":order=allPokemonsCopy.sort(function(a,b){if(b.name>a.name)return 1;if(a.name>b.name)return-1;return 0;});break;case\"wea\":order=allPokemonsCopy.sort(function(a,b){return a.attack-b.attack;});break;case\"str\":order=allPokemonsCopy.sort(function(a,b){return b.attack-a.attack;});break;default:order=allPokemonsCopy;}return _objectSpread(_objectSpread({},state),{},{pokemons:order});default:return _objectSpread({},state);}};export default reducer;","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_NAME","GET_POKEMON_DETAIL","GET_ALL_TYPES","CLEAR_DETAIL","FILTER_TYPE","FILTER_BY_SOURCE","ORDER_POKEMON","initialState","allPokemons","pokemons","allTypes","detail","reducer","state","arguments","length","undefined","action","type","_objectSpread","payload","allPokemonsType","_toConsumableArray","typeFiltered","filter","poke","types","some","name","p","created","allPokemonsCopy","order","sort","a","b","attack"],"sources":["C:/Users/gonza/Desktop/Henry/PI Pokemon Front/client/src/redux/reducer.js"],"sourcesContent":["import {GET_ALL_POKEMONS, \r\n    GET_POKEMON_BY_NAME, \r\n    GET_POKEMON_DETAIL, \r\n    GET_ALL_TYPES, \r\n    CLEAR_DETAIL, \r\n    FILTER_TYPE, \r\n    FILTER_BY_SOURCE,\r\n    ORDER_POKEMON} from \"./actions\"; \r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    allTypes: [],\r\n    detail: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case GET_ALL_POKEMONS:\r\n            return { \r\n                ...state, allPokemons: action.payload, pokemons: action.payload};\r\n        case GET_POKEMON_BY_NAME:\r\n            return { \r\n                ...state, pokemons: action.payload};\r\n        case GET_POKEMON_DETAIL:\r\n            return { ...state, detail: action.payload};\r\n        case CLEAR_DETAIL:\r\n            return { ...state, detail: {} };\r\n        case GET_ALL_TYPES:\r\n            return { ...state, allTypes: action.payload};\r\n            \r\n        case FILTER_TYPE: \r\n            let allPokemonsType = [...state.allPokemons];\r\n            let typeFiltered = \r\n            action.payload  === 'all'\r\n                ? allPokemonsType\r\n                : allPokemonsType.filter((poke) => {\r\n                return poke.types.some((type) => type.name === action.payload);\r\n                });\r\n            return {...state, pokemons: typeFiltered}\r\n\r\n        case FILTER_BY_SOURCE:\r\n            const allPokemons = [...state.allPokemons];\r\n            const filter =\r\n            action.payload === \"created\"\r\n                ? allPokemons.filter((p) => p.created)\r\n                : allPokemons.filter((p) => !p.created);\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload === \"all\" ? allPokemons : filter,\r\n            };\r\n            \r\n        case ORDER_POKEMON:\r\n            const allPokemonsCopy = [...state.allPokemons];\r\n            let order;\r\n            switch (action.payload) {\r\n                case \"asc\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(a.name > b.name) return 1\r\n                        if(b.name > a.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"des\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(b.name > a.name) return 1\r\n                        if(a.name > b.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"wea\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return a.attack - b.attack;\r\n                    })\r\n                break;\r\n                case \"str\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return b.attack - a.attack;\r\n                    })\r\n                break;\r\n                default:\r\n                    order = allPokemonsCopy;\r\n            }\r\n            return {...state, pokemons: order};\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}