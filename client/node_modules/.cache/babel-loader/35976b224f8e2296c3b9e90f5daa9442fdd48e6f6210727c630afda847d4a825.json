{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_BY_NAME, GET_POKEMON_DETAIL, GET_ALL_TYPES, CLEAR_DETAIL, FILTER_TYPE, FILTER_BY_SOURCE, ORDER_POKEMON } from \"./actions\";\nconst initialState = {\n  allPokemons: [],\n  pokemons: [],\n  allTypes: [],\n  detail: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case CLEAR_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    case FILTER_TYPE:\n      let allPokemonsType = [...state.allPokemons];\n      let typeFiltered = action.payload === 'all' ? allPokemonsType : allPokemonsType.filter(poke => {\n        return poke.types.some(type => type.name === action.payload);\n      });\n      return {\n        ...state,\n        pokemons: typeFiltered\n      };\n    case FILTER_BY_SOURCE:\n      const allPokemons = [...state.allPokemons];\n      const filter = action.payload === \"created\" ? allPokemons.filter(p => p.created) : allPokemons.filter(p => !p.created);\n      return {\n        ...state,\n        pokemons: action.payload === \"all\" ? allPokemons : filter\n      };\n    case ORDER_POKEMON:\n      const allPokemonsCopy = [...state.allPokemons];\n      let order;\n      switch (action.payload) {\n        case \"asc\":\n          order = allPokemonsCopy.sort((a, b) => {\n            if (a.name > b.name) return 1;\n            if (b.name > a.name) return -1;\n            return 0;\n          });\n          break;\n        case \"des\":\n          order = allPokemonsCopy.sort((a, b) => {\n            if (b.name > a.name) return 1;\n            if (a.name > b.name) return -1;\n            return 0;\n          });\n          break;\n        case \"wea\":\n          order = allPokemonsCopy.sort((a, b) => {\n            return a.attack - b.attack;\n          });\n          break;\n        case \"str\":\n          order = allPokemonsCopy.sort((a, b) => {\n            return b.attack - a.attack;\n          });\n          break;\n        default:\n          order = allPokemonsCopy;\n      }\n      return {\n        ...state,\n        pokemons: order\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_NAME","GET_POKEMON_DETAIL","GET_ALL_TYPES","CLEAR_DETAIL","FILTER_TYPE","FILTER_BY_SOURCE","ORDER_POKEMON","initialState","allPokemons","pokemons","allTypes","detail","reducer","state","action","type","payload","allPokemonsType","typeFiltered","filter","poke","types","some","name","p","created","allPokemonsCopy","order","sort","a","b","attack"],"sources":["C:/Users/gonza/Desktop/Henry/PI Pokemon Front/client/src/redux/reducer.js"],"sourcesContent":["import {GET_ALL_POKEMONS, \r\n    GET_POKEMON_BY_NAME, \r\n    GET_POKEMON_DETAIL, \r\n    GET_ALL_TYPES, \r\n    CLEAR_DETAIL, \r\n    FILTER_TYPE, \r\n    FILTER_BY_SOURCE,\r\n    ORDER_POKEMON} from \"./actions\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    allTypes: [],\r\n    detail: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case GET_ALL_POKEMONS:\r\n            return { \r\n                ...state, allPokemons: action.payload, pokemons: action.payload};\r\n        case GET_POKEMON_BY_NAME:\r\n            return { \r\n                ...state, pokemons: action.payload};\r\n        case GET_POKEMON_DETAIL:\r\n            return { ...state, detail: action.payload};\r\n        case CLEAR_DETAIL:\r\n            return { ...state, detail: {} };\r\n        case GET_ALL_TYPES:\r\n            return { ...state, allTypes: action.payload};\r\n            \r\n        case FILTER_TYPE: \r\n            let allPokemonsType = [...state.allPokemons];\r\n            let typeFiltered = \r\n            action.payload  === 'all'\r\n                ? allPokemonsType\r\n                : allPokemonsType.filter((poke) => {\r\n                return poke.types.some((type) => type.name === action.payload);\r\n                });\r\n            return {...state, pokemons: typeFiltered}\r\n\r\n        case FILTER_BY_SOURCE:\r\n            const allPokemons = [...state.allPokemons];\r\n            const filter =\r\n            action.payload === \"created\"\r\n                ? allPokemons.filter((p) => p.created)\r\n                : allPokemons.filter((p) => !p.created);\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload === \"all\" ? allPokemons : filter,\r\n            };\r\n            \r\n        case ORDER_POKEMON:\r\n            const allPokemonsCopy = [...state.allPokemons];\r\n            let order;\r\n            switch (action.payload) {\r\n                case \"asc\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(a.name > b.name) return 1\r\n                        if(b.name > a.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"des\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(b.name > a.name) return 1\r\n                        if(a.name > b.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"wea\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return a.attack - b.attack;\r\n                    })\r\n                break;\r\n                case \"str\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return b.attack - a.attack;\r\n                    })\r\n                break;\r\n                default:\r\n                    order = allPokemonsCopy;\r\n            }\r\n            return {...state, pokemons: order};\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}