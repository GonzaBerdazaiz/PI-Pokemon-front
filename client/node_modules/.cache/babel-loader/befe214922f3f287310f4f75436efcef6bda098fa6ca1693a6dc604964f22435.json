{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport Card from \"../../components/Card/Card\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from \"./Home.module.css\";\nimport { getAllPokemons } from \"../../redux/actions\";\nimport Paginacion from \"../../components/Paginacion/Paginacion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\n\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const itemsPerPage = 12; // numero de pokemon por pagina\n  const [currentPage, setCurrentPage] = useState(1); // pagina actual\n  const totalItems = Object.keys(allPokemons).length; // total de elementos\n  const totalPages = Math.ceil(allPokemons.length / itemsPerPage); // numero total de paginas\n\n  useEffect(() => {\n    //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\n    dispatch(getAllPokemons());\n  }, [dispatch]);\n  //SECUENCIA: Se monta HOME y eso dispara el useEffect el cual hace el dispatch. eso hace que se ejecute la action creator getAllPokemons la cual retorna la funcion. El thunk middleware agarra la fc la ejecuta, hace el dispatch y la info va al reducer y crea un estado nuevo q es igual al anterior pero con el cambio que le pasamos\n\n  const showPage = page => {\n    // funcion para mostrar los elementos de la pagina actual\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentPageData = Object.values(allPokemons).slice(startIndex, endIndex);\n    return currentPageData.map(poke => /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this));\n  };\n  const nextPage = () => {\n    // Función para cambiar a la página siguiente\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    // Función para cambiar a la página anterior\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.HomeBackground,\n    children: [/*#__PURE__*/_jsxDEV(Cards, {\n      data: showPage(currentPage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Paginacion, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onNextPage: nextPage,\n      onPrevPage: prevPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n\n  // return(\n  //     <div className={style.HomeBackground}>\n  //         {/* <div>\n  //             <Paginacion\n  //                 setCurrentPage={setCurrentPage}\n  //                 currentPage={currentPage}\n  //                 totalPokemon={allPokemons.length}\n  //                 pokemonPerPage={pokemonPerPage}\n  //             />\n  //         </div> */}\n  //         {/* <Cards Pokemon={currentPokemon}/> */}\n  //         <Cards/>\n  //     </div>\n  // )\n};\n_s(Home, \"8qqLoeytzLdRaQ0g/YFzIw2DSlM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","Card","React","useEffect","useState","useDispatch","useSelector","style","getAllPokemons","Paginacion","jsxDEV","_jsxDEV","Home","_s","dispatch","allPokemons","state","itemsPerPage","currentPage","setCurrentPage","totalItems","Object","keys","length","totalPages","Math","ceil","showPage","page","startIndex","endIndex","currentPageData","values","slice","map","poke","fileName","_jsxFileName","lineNumber","columnNumber","nextPage","prevPage","className","HomeBackground","children","data","onNextPage","onPrevPage","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport Card from \"../../components/Card/Card\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport style from \"./Home.module.css\";\r\nimport { getAllPokemons } from \"../../redux/actions\";\r\nimport Paginacion from \"../../components/Paginacion/Paginacion\"\r\n\r\nconst Home = () => { //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\r\n\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector(state => state.allPokemons);\r\n    const itemsPerPage = 12; // numero de pokemon por pagina\r\n    const [currentPage, setCurrentPage] = useState(1); // pagina actual\r\n    const totalItems = Object.keys(allPokemons).length; // total de elementos\r\n    const totalPages = Math.ceil(allPokemons.length / itemsPerPage); // numero total de paginas\r\n\r\n    useEffect(()=>{ //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\r\n        dispatch(getAllPokemons());\r\n    },[dispatch])   \r\n    //SECUENCIA: Se monta HOME y eso dispara el useEffect el cual hace el dispatch. eso hace que se ejecute la action creator getAllPokemons la cual retorna la funcion. El thunk middleware agarra la fc la ejecuta, hace el dispatch y la info va al reducer y crea un estado nuevo q es igual al anterior pero con el cambio que le pasamos\r\n\r\n    const showPage = (page) => {    // funcion para mostrar los elementos de la pagina actual\r\n        const startIndex = (page - 1) * itemsPerPage;\r\n        const endIndex = startIndex + itemsPerPage;\r\n        const currentPageData = Object.values(allPokemons).slice(startIndex, endIndex);\r\n        return currentPageData.map(poke => (\r\n            <Card/>\r\n        ));\r\n    }\r\n\r\n    const nextPage = () => {    // Función para cambiar a la página siguiente\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n    \r\n    const prevPage = () => {  // Función para cambiar a la página anterior\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.HomeBackground}>\r\n          <Cards data={showPage(currentPage)} />\r\n          <Paginacion\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            onNextPage={nextPage}\r\n            onPrevPage={prevPage}\r\n          />\r\n        </div>\r\n      );\r\n\r\n\r\n\r\n    // return(\r\n    //     <div className={style.HomeBackground}>\r\n    //         {/* <div>\r\n    //             <Paginacion\r\n    //                 setCurrentPage={setCurrentPage}\r\n    //                 currentPage={currentPage}\r\n    //                 totalPokemon={allPokemons.length}\r\n    //                 pokemonPerPage={pokemonPerPage}\r\n    //             />\r\n    //         </div> */}\r\n    //         {/* <Cards Pokemon={currentPokemon}/> */}\r\n    //         <Cards/>\r\n    //     </div>\r\n    // )\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}