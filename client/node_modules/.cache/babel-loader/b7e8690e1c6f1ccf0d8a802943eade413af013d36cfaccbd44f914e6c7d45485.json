{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_BY_NAME, GET_POKEMON_DETAIL, GET_ALL_TYPES, CLEAR_DETAIL, FILTER_BY_SOURCE, ORDER_POKEMON } from \"./actions\";\nconst initialState = {\n  allPokemons: [],\n  pokemons: [],\n  allTypes: [],\n  detail: [],\n  pokemonFiltered: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //switch que evalua el action type\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case CLEAR_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    case FILTER_BY_SOURCE:\n      const allPokemons = [...state.allPokemons];\n      const filteredPokemons = [...state.pokemonFiltered];\n      let filter;\n      switch (action.payload) {\n        case \"all\":\n          filter = allPokemons.sort((a, b) => {\n            if (a.id > b.id) return 1;\n            if (b.id > a.id) return -1;\n            return 0;\n          });\n          break;\n        case \"original\":\n          filter = filteredPokemons.filter(a => a.created);\n          break;\n        case \"created\":\n          filter = filteredPokemons.filter(a => a.created === false);\n          break;\n        default:\n          filter = filteredPokemons;\n      }\n    // const filter =\n    //     action.payload === \"created\"\n    //     ? filteredPokemons.filter((v) => v.created)\n    //     : filteredPokemons.filter((v) => !v.created);\n    // return {\n    //     ...state, pokemons: action.payload === \"all\" ? state.filteredPokemons : filter};\n    case ORDER_POKEMON:\n      const orderPokemons = [...state.allPokemons];\n      let order;\n      switch (action.payload) {\n        case \"all\":\n          order = orderPokemons.sort((a, b) => {\n            if (a.id > b.id) return 1;\n            if (b.id > a.id) return -1;\n            return 0;\n          });\n          break;\n        case \"asc\":\n          order = orderPokemons.sort((a, b) => {\n            if (a.name > b.name) return 1;\n            if (b.name > a.name) return -1;\n            return 0;\n          });\n          break;\n        case \"des\":\n          order = orderPokemons.sort((a, b) => {\n            if (b.name > a.name) return 1;\n            if (a.name > b.name) return -1;\n            return 0;\n          });\n          break;\n        case \"wea\":\n          order = orderPokemons.sort((a, b) => {\n            return a.attack - b.attack;\n          });\n          break;\n        case \"str\":\n          order = orderPokemons.sort((a, b) => {\n            return b.attack - a.attack;\n          });\n          break;\n        default:\n          order = orderPokemons;\n      }\n      return {\n        ...state,\n        pokemons: order,\n        allPokemons: order\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;\n\n//El reducer es una funcion que es quien sabe que hacerle al estado global. Lo recibe y recibe la action que dice que hacer\n//para que finalmente se ejecuten estas funciones, debemos montarlas en el HOME","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_NAME","GET_POKEMON_DETAIL","GET_ALL_TYPES","CLEAR_DETAIL","FILTER_BY_SOURCE","ORDER_POKEMON","initialState","allPokemons","pokemons","allTypes","detail","pokemonFiltered","reducer","state","arguments","length","undefined","action","type","payload","filteredPokemons","filter","sort","a","b","id","created","orderPokemons","order","name","attack"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/redux/reducer.js"],"sourcesContent":["import {GET_ALL_POKEMONS, \r\n    GET_POKEMON_BY_NAME, \r\n    GET_POKEMON_DETAIL, \r\n    GET_ALL_TYPES, \r\n    CLEAR_DETAIL, \r\n    FILTER_BY_SOURCE, \r\n    ORDER_POKEMON} from \"./actions\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    allTypes: [],\r\n    detail: [],\r\n    pokemonFiltered: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type) { //switch que evalua el action type\r\n        case GET_ALL_POKEMONS:\r\n            return { \r\n                ...state, allPokemons: action.payload, pokemons: action.payload};\r\n        case GET_POKEMON_BY_NAME:\r\n            return { \r\n                ...state, pokemons: action.payload};\r\n        case GET_POKEMON_DETAIL:\r\n            return { ...state, detail: action.payload};\r\n        case CLEAR_DETAIL:\r\n            return { ...state, detail: {} };\r\n        case GET_ALL_TYPES:\r\n            return { ...state, allTypes: action.payload};\r\n        case FILTER_BY_SOURCE: \r\n            const allPokemons = [...state.allPokemons];\r\n            const filteredPokemons = [...state.pokemonFiltered]\r\n            let filter;\r\n            switch (action.payload){\r\n                case \"all\":\r\n                    filter = allPokemons.sort((a, b) => {\r\n                        if(a.id > b.id) return 1\r\n                        if(b.id > a.id) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"original\":\r\n                    filter = filteredPokemons.filter((a) => a.created)\r\n                break;\r\n                case \"created\":\r\n                    filter = filteredPokemons.filter((a) => a.created===false)\r\n                break;\r\n                default:\r\n                    filter = filteredPokemons;\r\n            }\r\n            // const filter =\r\n            //     action.payload === \"created\"\r\n            //     ? filteredPokemons.filter((v) => v.created)\r\n            //     : filteredPokemons.filter((v) => !v.created);\r\n            // return {\r\n            //     ...state, pokemons: action.payload === \"all\" ? state.filteredPokemons : filter};\r\n        case ORDER_POKEMON:\r\n            const orderPokemons = [...state.allPokemons];\r\n            let order;\r\n            switch (action.payload) {\r\n                case \"all\":\r\n                    order = orderPokemons.sort((a, b) => {\r\n                        if(a.id > b.id) return 1\r\n                        if(b.id > a.id) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"asc\":\r\n                    order = orderPokemons.sort((a, b) => {\r\n                        if(a.name > b.name) return 1\r\n                        if(b.name > a.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"des\":\r\n                    order = orderPokemons.sort((a, b) => {\r\n                        if(b.name > a.name) return 1\r\n                        if(a.name > b.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"wea\":\r\n                    order = orderPokemons.sort((a, b) => {\r\n                        return a.attack - b.attack;\r\n                    })\r\n                break;\r\n                case \"str\":\r\n                    order = orderPokemons.sort((a, b) => {\r\n                        return b.attack - a.attack;\r\n                    })\r\n                break;\r\n                default:\r\n                    order = orderPokemons;\r\n            }\r\n            return {...state, pokemons: order, allPokemons: order};\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//El reducer es una funcion que es quien sabe que hacerle al estado global. Lo recibe y recibe la action que dice que hacer\r\n//para que finalmente se ejecuten estas funciones, debemos montarlas en el HOME"],"mappings":"AAAA,SAAQA,gBAAgB,EACpBC,mBAAmB,EACnBC,kBAAkB,EAClBC,aAAa,EACbC,YAAY,EACZC,gBAAgB,EAChBC,aAAa,QAAO,WAAW;AAEnC,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAiC;EAAA,IAAhCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,YAAY;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IAAI;IACnB,KAAKnB,gBAAgB;MACjB,OAAO;QACH,GAAGc,KAAK;QAAEN,WAAW,EAAEU,MAAM,CAACE,OAAO;QAAEX,QAAQ,EAAES,MAAM,CAACE;MAAO,CAAC;IACxE,KAAKnB,mBAAmB;MACpB,OAAO;QACH,GAAGa,KAAK;QAAEL,QAAQ,EAAES,MAAM,CAACE;MAAO,CAAC;IAC3C,KAAKlB,kBAAkB;MACnB,OAAO;QAAE,GAAGY,KAAK;QAAEH,MAAM,EAAEO,MAAM,CAACE;MAAO,CAAC;IAC9C,KAAKhB,YAAY;MACb,OAAO;QAAE,GAAGU,KAAK;QAAEH,MAAM,EAAE,CAAC;MAAE,CAAC;IACnC,KAAKR,aAAa;MACd,OAAO;QAAE,GAAGW,KAAK;QAAEJ,QAAQ,EAAEQ,MAAM,CAACE;MAAO,CAAC;IAChD,KAAKf,gBAAgB;MACjB,MAAMG,WAAW,GAAG,CAAC,GAAGM,KAAK,CAACN,WAAW,CAAC;MAC1C,MAAMa,gBAAgB,GAAG,CAAC,GAAGP,KAAK,CAACF,eAAe,CAAC;MACnD,IAAIU,MAAM;MACV,QAAQJ,MAAM,CAACE,OAAO;QAClB,KAAK,KAAK;UACNE,MAAM,GAAGd,WAAW,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YAChC,IAAGD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;YACxB,IAAGD,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,EAAE,OAAO,CAAC,CAAC;YACzB,OAAO,CAAC;UACZ,CAAC,CAAC;UACN;QACA,KAAK,UAAU;UACXJ,MAAM,GAAGD,gBAAgB,CAACC,MAAM,CAAEE,CAAC,IAAKA,CAAC,CAACG,OAAO,CAAC;UACtD;QACA,KAAK,SAAS;UACVL,MAAM,GAAGD,gBAAgB,CAACC,MAAM,CAAEE,CAAC,IAAKA,CAAC,CAACG,OAAO,KAAG,KAAK,CAAC;UAC9D;QACA;UACIL,MAAM,GAAGD,gBAAgB;MACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACJ,KAAKf,aAAa;MACd,MAAMsB,aAAa,GAAG,CAAC,GAAGd,KAAK,CAACN,WAAW,CAAC;MAC5C,IAAIqB,KAAK;MACT,QAAQX,MAAM,CAACE,OAAO;QAClB,KAAK,KAAK;UACNS,KAAK,GAAGD,aAAa,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACjC,IAAGD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;YACxB,IAAGD,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,EAAE,OAAO,CAAC,CAAC;YACzB,OAAO,CAAC;UACZ,CAAC,CAAC;UACN;QACA,KAAK,KAAK;UACNG,KAAK,GAAGD,aAAa,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACjC,IAAGD,CAAC,CAACM,IAAI,GAAGL,CAAC,CAACK,IAAI,EAAE,OAAO,CAAC;YAC5B,IAAGL,CAAC,CAACK,IAAI,GAAGN,CAAC,CAACM,IAAI,EAAE,OAAO,CAAC,CAAC;YAC7B,OAAO,CAAC;UACZ,CAAC,CAAC;UACN;QACA,KAAK,KAAK;UACND,KAAK,GAAGD,aAAa,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACjC,IAAGA,CAAC,CAACK,IAAI,GAAGN,CAAC,CAACM,IAAI,EAAE,OAAO,CAAC;YAC5B,IAAGN,CAAC,CAACM,IAAI,GAAGL,CAAC,CAACK,IAAI,EAAE,OAAO,CAAC,CAAC;YAC7B,OAAO,CAAC;UACZ,CAAC,CAAC;UACN;QACA,KAAK,KAAK;UACND,KAAK,GAAGD,aAAa,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACjC,OAAOD,CAAC,CAACO,MAAM,GAAGN,CAAC,CAACM,MAAM;UAC9B,CAAC,CAAC;UACN;QACA,KAAK,KAAK;UACNF,KAAK,GAAGD,aAAa,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACjC,OAAOA,CAAC,CAACM,MAAM,GAAGP,CAAC,CAACO,MAAM;UAC9B,CAAC,CAAC;UACN;QACA;UACIF,KAAK,GAAGD,aAAa;MAC7B;MACA,OAAO;QAAC,GAAGd,KAAK;QAAEL,QAAQ,EAAEoB,KAAK;QAAErB,WAAW,EAAEqB;MAAK,CAAC;IAE1D;MACI,OAAO;QAAE,GAAGf;MAAM,CAAC;EAC3B;AACJ,CAAC;AAED,eAAeD,OAAO;;AAEtB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}