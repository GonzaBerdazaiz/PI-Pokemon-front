{"ast":null,"code":"const validations = (form, allPokemons) => {\n  let errors = {};\n  let nameRegex = /^[a-zA-Z\\s]*$/;\n  let numberRegex = /^[0-9]{1,3}$/;\n  if (!form.name || !nameRegex.test(form.name)) {\n    errors.name = \"Name is required and numbers or special characters are not allowed\";\n  } else if (form.hp < 1 || form.hp > 255) {\n    errors.hp = \"Pokemon life must be higher than 1 and less than 255\";\n  } else if (!numberRegex.test(form.hp)) {\n    errors.hp = \"HP stat must be a number\";\n  } else if (form.attack < 1 || form.attack > 200) {\n    errors.attack = \"Pokemon attack must be higher than 1 and less than 200\";\n  } else if (!numberRegex.test(form.attack)) {\n    errors.attack = \"Attack stat must be a number\";\n  } else if (form.defense < 1 || form.defense > 250) {\n    errors.defense = \"Pokemon defense must be higher than 1 and less than 250\";\n  } else if (!numberRegex.test(form.defense)) {\n    errors.defense = \"Defense stat must be a number\";\n  } else if (form.speed < 1 || form.speed > 200) {\n    errors.speed = \"Pokemon speed must be higher than 1 and less than 200\";\n  } else if (!numberRegex.test(form.speed)) {\n    errors.speed = \"Speed stat must be a number\";\n  } else if (form.weight < 1 || form.weight > 9999) {\n    errors.weight = \"Pokemon weight must be higher than 1 and less than 9999 gr\";\n  } else if (!numberRegex.test(form.weight)) {\n    errors.weight = \"weight must be a number\";\n  } else if (form.height < 1 || form.height > 200) {\n    errors.height = 'Pokemon height must be higher than 1 and less than 200';\n  } else if (!numberRegex.test(form.height)) {\n    errors.height = \"Height must be a number\";\n  } else if (!form.types) {\n    errors.types = 'Must choose a pokemon type';\n  }\n  return errors;\n};\nexport default validations;","map":{"version":3,"names":["validations","form","allPokemons","errors","nameRegex","numberRegex","name","test","hp","attack","defense","speed","weight","height","types"],"sources":["C:/Users/gonza/Desktop/Henry/PI Pokemon Front/client/src/views/Form/Validaciones.jsx"],"sourcesContent":["const validations = (form, allPokemons)=>{\r\n    let errors = {}; \r\n\r\n    let nameRegex = /^[a-zA-Z\\s]*$/\r\n    let numberRegex = /^[0-9]{1,3}$/\r\n\r\n    if(!form.name || !nameRegex.test(form.name)){\r\n        errors.name = \"Name is required and numbers or special characters are not allowed\"\r\n    } else if(form.hp < 1 || form.hp > 255){\r\n        errors.hp = \"Pokemon life must be higher than 1 and less than 255\"\r\n    } else if(!numberRegex.test(form.hp)){\r\n        errors.hp = \"HP stat must be a number\"\r\n    } else if(form.attack < 1 || form.attack > 200){\r\n        errors.attack = \"Pokemon attack must be higher than 1 and less than 200\"\r\n    } else if(!numberRegex.test(form.attack)){\r\n        errors.attack = \"Attack stat must be a number\"\r\n    } else if(form.defense < 1 || form.defense > 250){\r\n        errors.defense = \"Pokemon defense must be higher than 1 and less than 250\"\r\n    } else if(!numberRegex.test(form.defense)){\r\n        errors.defense = \"Defense stat must be a number\"\r\n    } else if(form.speed < 1 || form.speed > 200){\r\n        errors.speed = \"Pokemon speed must be higher than 1 and less than 200\"\r\n    } else if(!numberRegex.test(form.speed)){\r\n        errors.speed = \"Speed stat must be a number\"\r\n    } else if(form.weight < 1 || form.weight > 9999){\r\n        errors.weight = \"Pokemon weight must be higher than 1 and less than 9999 gr\" \r\n    } else if(!numberRegex.test(form.weight)){\r\n        errors.weight = \"weight must be a number\"\r\n    } else if(form.height < 1 || form.height > 200){\r\n        errors.height = 'Pokemon height must be higher than 1 and less than 200'\r\n    } else if(!numberRegex.test(form.height)){\r\n        errors.height = \"Height must be a number\"\r\n    } else if(!form.types){\r\n        errors.types = 'Must choose a pokemon type'\r\n    }\r\n    \r\n    return errors;\r\n}\r\n\r\nexport default validations;"],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAACC,IAAI,EAAEC,WAAW,KAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIC,SAAS,GAAG,eAAe;EAC/B,IAAIC,WAAW,GAAG,cAAc;EAEhC,IAAG,CAACJ,IAAI,CAACK,IAAI,IAAI,CAACF,SAAS,CAACG,IAAI,CAACN,IAAI,CAACK,IAAI,CAAC,EAAC;IACxCH,MAAM,CAACG,IAAI,GAAG,oEAAoE;EACtF,CAAC,MAAM,IAAGL,IAAI,CAACO,EAAE,GAAG,CAAC,IAAIP,IAAI,CAACO,EAAE,GAAG,GAAG,EAAC;IACnCL,MAAM,CAACK,EAAE,GAAG,sDAAsD;EACtE,CAAC,MAAM,IAAG,CAACH,WAAW,CAACE,IAAI,CAACN,IAAI,CAACO,EAAE,CAAC,EAAC;IACjCL,MAAM,CAACK,EAAE,GAAG,0BAA0B;EAC1C,CAAC,MAAM,IAAGP,IAAI,CAACQ,MAAM,GAAG,CAAC,IAAIR,IAAI,CAACQ,MAAM,GAAG,GAAG,EAAC;IAC3CN,MAAM,CAACM,MAAM,GAAG,wDAAwD;EAC5E,CAAC,MAAM,IAAG,CAACJ,WAAW,CAACE,IAAI,CAACN,IAAI,CAACQ,MAAM,CAAC,EAAC;IACrCN,MAAM,CAACM,MAAM,GAAG,8BAA8B;EAClD,CAAC,MAAM,IAAGR,IAAI,CAACS,OAAO,GAAG,CAAC,IAAIT,IAAI,CAACS,OAAO,GAAG,GAAG,EAAC;IAC7CP,MAAM,CAACO,OAAO,GAAG,yDAAyD;EAC9E,CAAC,MAAM,IAAG,CAACL,WAAW,CAACE,IAAI,CAACN,IAAI,CAACS,OAAO,CAAC,EAAC;IACtCP,MAAM,CAACO,OAAO,GAAG,+BAA+B;EACpD,CAAC,MAAM,IAAGT,IAAI,CAACU,KAAK,GAAG,CAAC,IAAIV,IAAI,CAACU,KAAK,GAAG,GAAG,EAAC;IACzCR,MAAM,CAACQ,KAAK,GAAG,uDAAuD;EAC1E,CAAC,MAAM,IAAG,CAACN,WAAW,CAACE,IAAI,CAACN,IAAI,CAACU,KAAK,CAAC,EAAC;IACpCR,MAAM,CAACQ,KAAK,GAAG,6BAA6B;EAChD,CAAC,MAAM,IAAGV,IAAI,CAACW,MAAM,GAAG,CAAC,IAAIX,IAAI,CAACW,MAAM,GAAG,IAAI,EAAC;IAC5CT,MAAM,CAACS,MAAM,GAAG,4DAA4D;EAChF,CAAC,MAAM,IAAG,CAACP,WAAW,CAACE,IAAI,CAACN,IAAI,CAACW,MAAM,CAAC,EAAC;IACrCT,MAAM,CAACS,MAAM,GAAG,yBAAyB;EAC7C,CAAC,MAAM,IAAGX,IAAI,CAACY,MAAM,GAAG,CAAC,IAAIZ,IAAI,CAACY,MAAM,GAAG,GAAG,EAAC;IAC3CV,MAAM,CAACU,MAAM,GAAG,wDAAwD;EAC5E,CAAC,MAAM,IAAG,CAACR,WAAW,CAACE,IAAI,CAACN,IAAI,CAACY,MAAM,CAAC,EAAC;IACrCV,MAAM,CAACU,MAAM,GAAG,yBAAyB;EAC7C,CAAC,MAAM,IAAG,CAACZ,IAAI,CAACa,KAAK,EAAC;IAClBX,MAAM,CAACW,KAAK,GAAG,4BAA4B;EAC/C;EAEA,OAAOX,MAAM;AACjB,CAAC;AAED,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}