{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_BY_NAME, GET_POKEMON_DETAIL, GET_ALL_TYPES, CLEAR_DETAIL, FILTER_TYPE, FILTER_BY_SOURCE, ORDER_POKEMON } from \"./actions\";\nconst initialState = {\n  allPokemons: [],\n  pokemons: [],\n  allTypes: [],\n  detail: [],\n  filteredPokemons: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload,\n        pokemons: action.payload\n      };\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemons: action.payload.data\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case CLEAR_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    case ORDER_POKEMON:\n      const allPokemonsCopy = [...state.allPokemons];\n      let order;\n      switch (action.payload) {\n        case \"asc\":\n          order = allPokemonsCopy.sort((a, b) => {\n            if (a.name > b.name) return 1;\n            if (b.name > a.name) return -1;\n            return 0;\n          });\n          break;\n        case \"des\":\n          order = allPokemonsCopy.sort((a, b) => {\n            if (b.name > a.name) return 1;\n            if (a.name > b.name) return -1;\n            return 0;\n          });\n          break;\n        case \"wea\":\n          order = allPokemonsCopy.sort((a, b) => {\n            return a.attack - b.attack;\n          });\n          break;\n        case \"str\":\n          order = allPokemonsCopy.sort((a, b) => {\n            return b.attack - a.attack;\n          });\n          break;\n        default:\n          order = allPokemonsCopy;\n      }\n      return {\n        ...state,\n        pokemons: order\n      };\n    case FILTER_TYPE:\n      let allPokemonsType = [...state.allPokemons];\n      let typeFiltered = action.payload === 'all' ? allPokemonsType : allPokemonsType.filter(poke => {\n        return poke.types.some(type => type.name === action.payload);\n      });\n      return {\n        ...state,\n        pokemons: typeFiltered\n      };\n    case FILTER_BY_SOURCE:\n      const allPokemons = [...state.allPokemons];\n      const filter = action.payload === \"created\" ? allPokemons.filter(p => p.created) : allPokemons.filter(p => !p.created);\n      return {\n        ...state,\n        pokemons: action.payload === \"all\" ? allPokemons : filter\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_NAME","GET_POKEMON_DETAIL","GET_ALL_TYPES","CLEAR_DETAIL","FILTER_TYPE","FILTER_BY_SOURCE","ORDER_POKEMON","initialState","allPokemons","pokemons","allTypes","detail","filteredPokemons","reducer","state","arguments","length","undefined","action","type","payload","data","allPokemonsCopy","order","sort","a","b","name","attack","allPokemonsType","typeFiltered","filter","poke","types","some","p","created"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/redux/reducer.js"],"sourcesContent":["import {GET_ALL_POKEMONS, \r\n    GET_POKEMON_BY_NAME, \r\n    GET_POKEMON_DETAIL, \r\n    GET_ALL_TYPES, \r\n    CLEAR_DETAIL, \r\n    FILTER_TYPE, \r\n    FILTER_BY_SOURCE,\r\n    ORDER_POKEMON} from \"./actions\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    allTypes: [],\r\n    detail: [],\r\n    filteredPokemons: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case GET_ALL_POKEMONS:\r\n            return { \r\n                ...state, allPokemons: action.payload, pokemons: action.payload};\r\n        case GET_POKEMON_BY_NAME:\r\n            return { \r\n                ...state, pokemons: action.payload.data};\r\n        case GET_POKEMON_DETAIL:\r\n            return { ...state, detail: action.payload};\r\n        case CLEAR_DETAIL:\r\n            return { ...state, detail: {} };\r\n        case GET_ALL_TYPES:\r\n            return { ...state, allTypes: action.payload};\r\n\r\n        case ORDER_POKEMON:\r\n            const allPokemonsCopy = [...state.allPokemons];\r\n            let order;\r\n            switch (action.payload) {\r\n                case \"asc\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(a.name > b.name) return 1\r\n                        if(b.name > a.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"des\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        if(b.name > a.name) return 1\r\n                        if(a.name > b.name) return -1;\r\n                        return 0\r\n                    })\r\n                break;\r\n                case \"wea\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return a.attack - b.attack;\r\n                    })\r\n                break;\r\n                case \"str\":\r\n                    order = allPokemonsCopy.sort((a, b) => {\r\n                        return b.attack - a.attack;\r\n                    })\r\n                break;\r\n                default:\r\n                    order = allPokemonsCopy;\r\n            }\r\n            return {...state, pokemons: order};\r\n        \r\n        case FILTER_TYPE: \r\n            let allPokemonsType = [...state.allPokemons];\r\n            let typeFiltered = \r\n            action.payload  === 'all'\r\n                ? allPokemonsType\r\n                : allPokemonsType.filter((poke) => {\r\n                return poke.types.some((type) => type.name === action.payload);\r\n                });\r\n            return {...state, pokemons: typeFiltered}\r\n\r\n        case FILTER_BY_SOURCE:\r\n            const allPokemons = [...state.allPokemons];\r\n            const filter =\r\n            action.payload === \"created\"\r\n                ? allPokemons.filter((p) => p.created)\r\n                : allPokemons.filter((p) => !p.created);\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload === \"all\" ? allPokemons : filter,\r\n            };\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}