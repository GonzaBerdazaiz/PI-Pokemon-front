{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport { useState, useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport style from \"./Home.module.css\";\nimport Pagination from \"../../components/Paginacion/Paginacion\";\n//import Loading from \"../../components/Loading/Loading\";\nimport { getAllPokemons } from \"../../redux/actions\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _ref => {\n  _s();\n  let {\n    pokemons\n  } = _ref;\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const [currentPage, setCurrentPage] = useState(1); //los creamos para controlar la pagina actual del paginado\n  const pokemonsPerPage = 12;\n  //const [loading, setLoading] = useState(true);   \n\n  const handlePaginate = pageNumber => {\n    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.length > 0 && allPokemons.slice(\n  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\n  indexOfFirstPokemon, indexOfLastPokemon);\n  useEffect(() => {\n    dispatch(getAllPokemons());\n  }, [dispatch]);\n\n  // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\n  //     setTimeout(() => {\n  //       setLoading(false);\n  //     }, 6000);\n  // };\n\n  // if (loading) {\n  //     changeLoading();\n  //     return <Loading></Loading>;\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.HomeBackground,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.filterContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          pokemonsPerPage: pokemonsPerPage,\n          totalPokemons: allPokemons.length,\n          currentPage: currentPage,\n          handlePaginate: handlePaginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        pokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n  //};\n};\n_s(Home, \"8qqLoeytzLdRaQ0g/YFzIw2DSlM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nconst mapStateToProps = state => {\n  return {\n    pokemons: state.pokemons\n  };\n};\nexport default connect(mapStateToProps, null)(Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","useState","useEffect","connect","useDispatch","useSelector","style","Pagination","getAllPokemons","NavBar","jsxDEV","_jsxDEV","Home","_ref","_s","pokemons","dispatch","allPokemons","state","currentPage","setCurrentPage","pokemonsPerPage","handlePaginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","length","slice","className","HomeBackground","children","fileName","_jsxFileName","lineNumber","columnNumber","filterContainer","totalPokemons","_c","mapStateToProps","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport { useState, useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport style from \"./Home.module.css\";\r\nimport Pagination from \"../../components/Paginacion/Paginacion\"\r\n//import Loading from \"../../components/Loading/Loading\";\r\nimport { getAllPokemons } from \"../../redux/actions\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\n\r\nconst Home = ({pokemons}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const [currentPage, setCurrentPage] = useState(1);  //los creamos para controlar la pagina actual del paginado\r\n    const pokemonsPerPage = 12;\r\n    //const [loading, setLoading] = useState(true);   \r\n\r\n    const handlePaginate = (pageNumber) => {    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const currentPokemons = allPokemons.length > 0 && allPokemons.slice(  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\r\n        indexOfFirstPokemon,\r\n        indexOfLastPokemon\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPokemons());\r\n    }, [dispatch])\r\n\r\n    // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\r\n    //     setTimeout(() => {\r\n    //       setLoading(false);\r\n    //     }, 6000);\r\n    // };\r\n    \r\n    // if (loading) {\r\n    //     changeLoading();\r\n    //     return <Loading></Loading>;\r\n    // } else {\r\n    \r\n        return (\r\n            <div className={style.HomeBackground}>\r\n                <NavBar/>\r\n                <div>\r\n                    <div className={style.filterContainer}>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        <Pagination\r\n                            pokemonsPerPage={pokemonsPerPage}\r\n                            totalPokemons={allPokemons.length}\r\n                            currentPage={currentPage}\r\n                            handlePaginate={handlePaginate}\r\n                        />\r\n                    </div>\r\n                    <Cards pokemons={currentPokemons} /> \r\n                </div> \r\n            </div>\r\n        );\r\n    //};\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Home);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}