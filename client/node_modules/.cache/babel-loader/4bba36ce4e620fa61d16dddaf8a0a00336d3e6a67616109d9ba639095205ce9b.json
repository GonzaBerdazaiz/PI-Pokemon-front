{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport style from \"./Home.module.css\";\nimport Pagination from \"../../components/Paginacion/Paginacion\";\n//import Loading from \"../../components/Loading/Loading\";\nimport Filter from \"../../components/Filter/Filter\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAllPokemons } from \"./redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\n    dispatch(getAllPokemons());\n  }, [dispatch]);\n  const allPokemons = useSelector(state => state.allPokemons);\n  const [currentPage, setCurrentPage] = useState(1); //los creamos para controlar la pagina actual del paginado\n  const pokemonsPerPage = 12;\n  //const [pokemonName, setPokemonName] = useState();\n  //const [loading, setLoading] = useState(true);   \n\n  const handlePaginate = pageNumber => {\n    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.length > 0 && allPokemons.slice(\n  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\n  indexOfFirstPokemon, indexOfLastPokemon);\n\n  // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\n  //     setTimeout(() => {\n  //       setLoading(false);\n  //     }, 6000);\n  // };\n\n  // if (loading) {\n  //     changeLoading();\n  //     return <Loading></Loading>;\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.HomeBackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.filterContainer,\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        pokemonsPerPage: pokemonsPerPage,\n        totalPokemons: allPokemons.length,\n        currentPage: currentPage,\n        handlePaginate: handlePaginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      pokemons: currentPokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n  //};\n};\n_s(Home, \"9z3rbf1D4uT8S+eLMIfOL3GxglY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","React","useState","useSelector","style","Pagination","Filter","useDispatch","useEffect","getAllPokemons","jsxDEV","_jsxDEV","Home","_s","dispatch","allPokemons","state","currentPage","setCurrentPage","pokemonsPerPage","handlePaginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","length","slice","className","HomeBackground","children","filterContainer","fileName","_jsxFileName","lineNumber","columnNumber","totalPokemons","pokemons","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport style from \"./Home.module.css\";\r\nimport Pagination from \"../../components/Paginacion/Paginacion\"\r\n//import Loading from \"../../components/Loading/Loading\";\r\nimport Filter from \"../../components/Filter/Filter\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect} from \"react\"\r\nimport { getAllPokemons } from \"./redux/actions\";\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{ //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\r\n        dispatch(getAllPokemons())\r\n      },[dispatch])   \r\n\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const [currentPage, setCurrentPage] = useState(1);  //los creamos para controlar la pagina actual del paginado\r\n    const pokemonsPerPage = 12;\r\n    //const [pokemonName, setPokemonName] = useState();\r\n    //const [loading, setLoading] = useState(true);   \r\n\r\n    const handlePaginate = (pageNumber) => {    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const currentPokemons = allPokemons.length > 0 && allPokemons.slice(  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\r\n        indexOfFirstPokemon,\r\n        indexOfLastPokemon\r\n    );\r\n\r\n    // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\r\n    //     setTimeout(() => {\r\n    //       setLoading(false);\r\n    //     }, 6000);\r\n    // };\r\n    \r\n    // if (loading) {\r\n    //     changeLoading();\r\n    //     return <Loading></Loading>;\r\n    // } else {\r\n    \r\n        return (\r\n            <div className={style.HomeBackground}>\r\n                <div className={style.filterContainer}>\r\n                    <Filter setCurrentPage={setCurrentPage}></Filter>\r\n                </div>\r\n                <div>\r\n                    <Pagination\r\n                        pokemonsPerPage={pokemonsPerPage}\r\n                        totalPokemons={allPokemons.length}\r\n                        currentPage={currentPage}\r\n                        handlePaginate={handlePaginate}\r\n                    />\r\n                </div>\r\n                <Cards pokemons={currentPokemons} />  \r\n            </div>\r\n        );\r\n    //};\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D;AACA,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAO,OAAO;AAChC,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAI;IAAE;IACZM,QAAQ,CAACL,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAC,CAACK,QAAQ,CAAC,CAAC;EAEf,MAAMC,WAAW,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;EACpD,MAAMiB,eAAe,GAAG,EAAE;EAC1B;EACA;;EAEA,MAAMC,cAAc,GAAIC,UAAU,IAAK;IAAK;IACxCH,cAAc,CAACG,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAGL,WAAW,GAAGE,eAAe,CAAC,CAAC;EAC1D,MAAMI,mBAAmB,GAAGD,kBAAkB,GAAGH,eAAe;EAChE,MAAMK,eAAe,GAAGT,WAAW,CAACU,MAAM,GAAG,CAAC,IAAIV,WAAW,CAACW,KAAK;EAAG;EAClEH,mBAAmB,EACnBD,kBACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEI,oBACIX,OAAA;IAAKgB,SAAS,EAAEvB,KAAK,CAACwB,cAAe;IAAAC,QAAA,gBACjClB,OAAA;MAAKgB,SAAS,EAAEvB,KAAK,CAAC0B,eAAgB;MAAAD,QAAA,eAClClB,OAAA,CAACL,MAAM;QAACY,cAAc,EAAEA;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNvB,OAAA;MAAAkB,QAAA,eACIlB,OAAA,CAACN,UAAU;QACPc,eAAe,EAAEA,eAAgB;QACjCgB,aAAa,EAAEpB,WAAW,CAACU,MAAO;QAClCR,WAAW,EAAEA,WAAY;QACzBG,cAAc,EAAEA;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA,CAACX,KAAK;MAACoC,QAAQ,EAAEZ;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;EAEd;AACJ,CAAC;AAAArB,EAAA,CArDKD,IAAI;EAAA,QAEWL,WAAW,EAMRJ,WAAW;AAAA;AAAAkC,EAAA,GAR7BzB,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}