{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport style from \"./Home.module.css\";\nimport { getAllPokemons } from \"../../redux/actions\";\nimport Paginacion from \"../../components/Paginacion/Paginacion\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\n\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const allPokemons = useSelector(state => state.allPokemons);\n  const [PokemonsPerPage] = useState(15);\n  const lastPokemonIndex = currentPage * PokemonsPerPage;\n  const firstPokemonIndex = lastPokemonIndex - PokemonsPerPage;\n  const currentPokemon = allPokemons.slice(firstPokemonIndex, lastPokemonIndex);\n  useEffect(() => {\n    //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\n    dispatch(getAllPokemons());\n  }, [dispatch]);\n  //SECUENCIA: Se monta HOME y eso dispara el useEffect el cual hace el dispatch. eso hace que se ejecute la action creator getAllPokemons la cual retorna la funcion. El thunk middleware agarra la fc la ejecuta, hace el dispatch y la info va al reducer y crea un estado nuevo q es igual al anterior pero con el cambio que le pasamos\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.searchContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paginacion, {\n        setCurrentPage: setCurrentPage,\n        currentPage: currentPage,\n        totalPokemones: allPokemons.length,\n        PokemonsPerPage: PokemonsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      pokemones: currentPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"fN3A3UFc1vZwVuURLoggU6s4vTE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","Link","useEffect","useDispatch","useSelector","useState","style","getAllPokemons","Paginacion","SearchBar","jsxDEV","_jsxDEV","Home","_s","dispatch","currentPage","setCurrentPage","allPokemons","state","PokemonsPerPage","lastPokemonIndex","firstPokemonIndex","currentPokemon","slice","className","container","children","searchContainer","fileName","_jsxFileName","lineNumber","columnNumber","totalPokemones","length","pokemones","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport style from \"./Home.module.css\";\r\nimport { getAllPokemons } from \"../../redux/actions\";\r\nimport Paginacion from \"../../components/Paginacion/Paginacion\"\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\"\r\n\r\nconst Home = () => { //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\r\n\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const allPokemons = useSelector(state=>state.allPokemons);\r\n    const [PokemonsPerPage] = useState(15);\r\n\r\n    const lastPokemonIndex = currentPage * PokemonsPerPage;\r\n    const firstPokemonIndex = lastPokemonIndex - PokemonsPerPage;\r\n    const currentPokemon = allPokemons.slice(\r\n    firstPokemonIndex,\r\n    lastPokemonIndex\r\n  );\r\n\r\n    useEffect(()=>{ //para manejar el ciclo de vida del componente. Cuando se monta useEffect recibe una funcion la q se ejecuta cunado el componente se monta o cambia alguna de las dependencias el array de dependencia\r\n        dispatch(getAllPokemons());\r\n    },[dispatch])\r\n    //SECUENCIA: Se monta HOME y eso dispara el useEffect el cual hace el dispatch. eso hace que se ejecute la action creator getAllPokemons la cual retorna la funcion. El thunk middleware agarra la fc la ejecuta, hace el dispatch y la info va al reducer y crea un estado nuevo q es igual al anterior pero con el cambio que le pasamos\r\n\r\n    return (\r\n        <div className={style.container}>\r\n          <div className={style.searchContainer}>\r\n          </div>\r\n          <div>\r\n            <Paginacion\r\n              setCurrentPage={setCurrentPage}\r\n              currentPage={currentPage}\r\n              totalPokemones={allPokemons.length}\r\n              PokemonsPerPage={PokemonsPerPage}\r\n            ></Paginacion>\r\n          </div>\r\n          <br />\r\n          <Cards pokemones={currentPokemon}></Cards>\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,SAAS,MAAM,sCAAsC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAE;;EAEjB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMY,WAAW,GAAGb,WAAW,CAACc,KAAK,IAAEA,KAAK,CAACD,WAAW,CAAC;EACzD,MAAM,CAACE,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,gBAAgB,GAAGL,WAAW,GAAGI,eAAe;EACtD,MAAME,iBAAiB,GAAGD,gBAAgB,GAAGD,eAAe;EAC5D,MAAMG,cAAc,GAAGL,WAAW,CAACM,KAAK,CACxCF,iBAAiB,EACjBD,gBACF,CAAC;EAEClB,SAAS,CAAC,MAAI;IAAE;IACZY,QAAQ,CAACP,cAAc,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAC,CAACO,QAAQ,CAAC,CAAC;EACb;;EAEA,oBACIH,OAAA;IAAKa,SAAS,EAAElB,KAAK,CAACmB,SAAU;IAAAC,QAAA,gBAC9Bf,OAAA;MAAKa,SAAS,EAAElB,KAAK,CAACqB;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNpB,OAAA;MAAAe,QAAA,eACEf,OAAA,CAACH,UAAU;QACTQ,cAAc,EAAEA,cAAe;QAC/BD,WAAW,EAAEA,WAAY;QACzBiB,cAAc,EAAEf,WAAW,CAACgB,MAAO;QACnCd,eAAe,EAAEA;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA,CAACX,KAAK;MAACkC,SAAS,EAAEZ;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAnCCD,IAAI;EAAA,QAEWT,WAAW,EAERC,WAAW;AAAA;AAAA+B,EAAA,GAJ7BvB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}