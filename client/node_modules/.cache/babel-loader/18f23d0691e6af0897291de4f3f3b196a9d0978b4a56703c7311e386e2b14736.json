{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\components\\\\Paginacion\\\\Paginacion.js\";\nimport style from \"./Paginacion.module.css\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  let {\n    pokemonsPerPage,\n    totalPokemons,\n    currentPage,\n    handlePaginate\n  } = _ref;\n  const pageNumbers = Math.ceil(totalPokemons / pokemonsPerPage);\n  const renderPageNumbers = () => {\n    //genera los elementos de lista (li) que representan los num de pag en el paginado\n    const pages = [];\n    for (let i = 1; i <= pageNumbers; i++) {\n      //se itera hasta pageNumbers que tiene el num total de paginas\n      pages.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        //cuando iteramos, primero generamos los num de las paginas\n        className: `${style.paginationItem} ${currentPage === i ? style.active : ''}`,\n        onClick: () => handlePaginate(i) //fn q ejecuta cuando hacemos click en la casilla y ejecuta handlePaginate con el i correspondiente lo que activa la logica pa mostrar los pokemon de esa pag\n        ,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this));\n    }\n    let range = 1;\n    let start = Math.max(currentPage - range, 1);\n    let end = Math.min(currentPage + range, pages);\n    return pages;\n  };\n  const handlePrevious = () => {\n    //fn q se activa cuando apretamos PREV para verificar si la pag es mayor a 1, si lo es ejecuta handlePaginate\n    if (currentPage > 1) {\n      handlePaginate(currentPage - 1);\n    }\n  };\n  const handleNext = () => {\n    //ambas funciones permiten navegar hacia adelante y hacia atras en el paginado \n    if (currentPage < pageNumbers) {\n      handlePaginate(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.PaginationContainer,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: style.PaginationList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${style.paginationItem} ${currentPage === 1 ? style.disabled : ''}` //para aplicar el estilo dependiendo si es active o no\n        ,\n        onClick: handlePrevious,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), renderPageNumbers(), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${style.paginationItem} ${currentPage === pageNumbers ? style.disabled : ''}`,\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["style","React","jsxDEV","_jsxDEV","Pagination","_ref","pokemonsPerPage","totalPokemons","currentPage","handlePaginate","pageNumbers","Math","ceil","renderPageNumbers","pages","i","push","className","paginationItem","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","range","start","max","end","min","handlePrevious","handleNext","PaginationContainer","PaginationList","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/components/Paginacion/Paginacion.js"],"sourcesContent":["import style from \"./Paginacion.module.css\";\r\nimport React from 'react';\r\n\r\nconst Pagination = ({\r\n    pokemonsPerPage,\r\n    totalPokemons, \r\n    currentPage,\r\n    handlePaginate,\r\n  }) => {\r\n    \r\n  const pageNumbers = Math.ceil(totalPokemons / pokemonsPerPage);\r\n\r\n  const renderPageNumbers = () => {    //genera los elementos de lista (li) que representan los num de pag en el paginado\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= pageNumbers; i++) {    //se itera hasta pageNumbers que tiene el num total de paginas\r\n      pages.push(\r\n        <li\r\n          key={i}   //cuando iteramos, primero generamos los num de las paginas\r\n          className={`${style.paginationItem} ${currentPage === i ? style.active : ''}`}\r\n          onClick={() => handlePaginate(i)} //fn q ejecuta cuando hacemos click en la casilla y ejecuta handlePaginate con el i correspondiente lo que activa la logica pa mostrar los pokemon de esa pag\r\n        >\r\n          {i}\r\n        </li>\r\n      );\r\n    }\r\n\r\n    let range = 1;\r\n    let start = Math.max(currentPage - range, 1);\r\n    let end = Math.min(currentPage + range, pages);\r\n\r\n    return pages;\r\n  };\r\n\r\n  const handlePrevious = () => {    //fn q se activa cuando apretamos PREV para verificar si la pag es mayor a 1, si lo es ejecuta handlePaginate\r\n    if (currentPage > 1) {\r\n      handlePaginate(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {    //ambas funciones permiten navegar hacia adelante y hacia atras en el paginado \r\n    if (currentPage < pageNumbers) {\r\n      handlePaginate(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.PaginationContainer}>\r\n      <ul className={style.PaginationList}>\r\n        <li\r\n          className={`${style.paginationItem} ${currentPage === 1 ? style.disabled : ''}`} //para aplicar el estilo dependiendo si es active o no\r\n          onClick={handlePrevious}\r\n        >\r\n          Prev\r\n        </li>\r\n        {renderPageNumbers()}\r\n        <li\r\n          className={`${style.paginationItem} ${currentPage === pageNumbers ? style.disabled : ''}`}\r\n          onClick={handleNext}\r\n        >\r\n          Next\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGC,IAAA,IAKX;EAAA,IALY;IAChBC,eAAe;IACfC,aAAa;IACbC,WAAW;IACXC;EACF,CAAC,GAAAJ,IAAA;EAED,MAAMK,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACL,aAAa,GAAGD,eAAe,CAAC;EAE9D,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAAK;IACnC,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIL,WAAW,EAAEK,CAAC,EAAE,EAAE;MAAK;MAC1CD,KAAK,CAACE,IAAI,eACRb,OAAA;QACY;QACVc,SAAS,EAAG,GAAEjB,KAAK,CAACkB,cAAe,IAAGV,WAAW,KAAKO,CAAC,GAAGf,KAAK,CAACmB,MAAM,GAAG,EAAG,EAAE;QAC9EC,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACM,CAAC,CAAE,CAAC;QAAA;QAAAM,QAAA,EAEjCN;MAAC,GAJGA,CAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACN,CAAC;IACH;IAEA,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK,GAAGhB,IAAI,CAACiB,GAAG,CAACpB,WAAW,GAAGkB,KAAK,EAAE,CAAC,CAAC;IAC5C,IAAIG,GAAG,GAAGlB,IAAI,CAACmB,GAAG,CAACtB,WAAW,GAAGkB,KAAK,EAAEZ,KAAK,CAAC;IAE9C,OAAOA,KAAK;EACd,CAAC;EAED,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IAAK;IAChC,IAAIvB,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMwB,UAAU,GAAGA,CAAA,KAAM;IAAK;IAC5B,IAAIxB,WAAW,GAAGE,WAAW,EAAE;MAC7BD,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAEjB,KAAK,CAACiC,mBAAoB;IAAAZ,QAAA,eACxClB,OAAA;MAAIc,SAAS,EAAEjB,KAAK,CAACkC,cAAe;MAAAb,QAAA,gBAClClB,OAAA;QACEc,SAAS,EAAG,GAAEjB,KAAK,CAACkB,cAAe,IAAGV,WAAW,KAAK,CAAC,GAAGR,KAAK,CAACmC,QAAQ,GAAG,EAAG,EAAE,CAAC;QAAA;QACjFf,OAAO,EAAEW,cAAe;QAAAV,QAAA,EACzB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJZ,iBAAiB,CAAC,CAAC,eACpBV,OAAA;QACEc,SAAS,EAAG,GAAEjB,KAAK,CAACkB,cAAe,IAAGV,WAAW,KAAKE,WAAW,GAAGV,KAAK,CAACmC,QAAQ,GAAG,EAAG,EAAE;QAC1Ff,OAAO,EAAEY,UAAW;QAAAX,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACW,EAAA,GA9DIhC,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}