{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport { useState, useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport style from \"./Home.module.css\";\nimport Pagination from \"../../components/Paginacion/Paginacion\";\n//import Loading from \"../../components/Loading/Loading\";\n//import Filter from \"../../components/Filter/Filter\"\n// import { getAllPokemons } from \"../../redux/actions\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _ref => {\n  _s();\n  let {\n    pokemons\n  } = _ref;\n  const allPokemons = useSelector(state => state.allPokemons);\n  const [currentPage, setCurrentPage] = useState(1); //los creamos para controlar la pagina actual del paginado\n  const pokemonsPerPage = 12;\n  //const [pokemonName, setPokemonName] = useState();\n  //const [loading, setLoading] = useState(true);   \n\n  const handlePaginate = pageNumber => {\n    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.length > 0 && allPokemons.slice(\n  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\n  indexOfFirstPokemon, indexOfLastPokemon);\n\n  // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\n  //     setTimeout(() => {\n  //       setLoading(false);\n  //     }, 6000);\n  // };\n\n  // if (loading) {\n  //     changeLoading();\n  //     return <Loading></Loading>;\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.HomeBackground,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.filterContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        pokemonsPerPage: pokemonsPerPage,\n        totalPokemons: allPokemons.length,\n        currentPage: currentPage,\n        handlePaginate: handlePaginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      pokemons: currentPokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n  //};\n};\n_s(Home, \"tTksP9mKbIST+u2zYFC3EwLZ6L4=\", false, function () {\n  return [useSelector];\n});\n_c = Home;\nconst mapStateToProps = state => {\n  return {\n    pokemons: state.pokemons\n  };\n};\nexport default connect(mapStateToProps, null)(Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","useState","useEffect","connect","useDispatch","useSelector","style","Pagination","NavBar","jsxDEV","_jsxDEV","Home","_ref","_s","pokemons","allPokemons","state","currentPage","setCurrentPage","pokemonsPerPage","handlePaginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","length","slice","className","HomeBackground","children","fileName","_jsxFileName","lineNumber","columnNumber","filterContainer","totalPokemons","_c","mapStateToProps","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport { useState, useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport style from \"./Home.module.css\";\r\nimport Pagination from \"../../components/Paginacion/Paginacion\"\r\n//import Loading from \"../../components/Loading/Loading\";\r\n//import Filter from \"../../components/Filter/Filter\"\r\n// import { getAllPokemons } from \"../../redux/actions\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\n\r\nconst Home = ({pokemons}) => {\r\n\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const [currentPage, setCurrentPage] = useState(1);  //los creamos para controlar la pagina actual del paginado\r\n    const pokemonsPerPage = 12;\r\n    //const [pokemonName, setPokemonName] = useState();\r\n    //const [loading, setLoading] = useState(true);   \r\n\r\n    const handlePaginate = (pageNumber) => {    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const currentPokemons = allPokemons.length > 0 && allPokemons.slice(  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\r\n        indexOfFirstPokemon,\r\n        indexOfLastPokemon\r\n    );\r\n\r\n    // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\r\n    //     setTimeout(() => {\r\n    //       setLoading(false);\r\n    //     }, 6000);\r\n    // };\r\n    \r\n    // if (loading) {\r\n    //     changeLoading();\r\n    //     return <Loading></Loading>;\r\n    // } else {\r\n    \r\n        return (\r\n            <div className={style.HomeBackground}>\r\n                <NavBar />\r\n                <div className={style.filterContainer}>\r\n                    {/* <Filter setCurrentPage={setCurrentPage}></Filter> */}\r\n                </div>\r\n                <div>\r\n                    <Pagination\r\n                        pokemonsPerPage={pokemonsPerPage}\r\n                        totalPokemons={allPokemons.length}\r\n                        currentPage={currentPage}\r\n                        handlePaginate={handlePaginate}\r\n                    />\r\n                </div>\r\n                <Cards pokemons={currentPokemons} />  \r\n            </div>\r\n        );\r\n    //};\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Home);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC/D,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D;AACA;AACA;AACA,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEpB,MAAMG,WAAW,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;EACpD,MAAMkB,eAAe,GAAG,EAAE;EAC1B;EACA;;EAEA,MAAMC,cAAc,GAAIC,UAAU,IAAK;IAAK;IACxCH,cAAc,CAACG,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAGL,WAAW,GAAGE,eAAe,CAAC,CAAC;EAC1D,MAAMI,mBAAmB,GAAGD,kBAAkB,GAAGH,eAAe;EAChE,MAAMK,eAAe,GAAGT,WAAW,CAACU,MAAM,GAAG,CAAC,IAAIV,WAAW,CAACW,KAAK;EAAG;EAClEH,mBAAmB,EACnBD,kBACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEI,oBACIZ,OAAA;IAAKiB,SAAS,EAAErB,KAAK,CAACsB,cAAe;IAAAC,QAAA,gBACjCnB,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAKiB,SAAS,EAAErB,KAAK,CAAC4B;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjC,CAAC,eACNvB,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACH,UAAU;QACPY,eAAe,EAAEA,eAAgB;QACjCgB,aAAa,EAAEpB,WAAW,CAACU,MAAO;QAClCR,WAAW,EAAEA,WAAY;QACzBG,cAAc,EAAEA;MAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA,CAACV,KAAK;MAACc,QAAQ,EAAEU;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;EAEd;AACJ,CAAC;AAAApB,EAAA,CAhDKF,IAAI;EAAA,QAEcN,WAAW;AAAA;AAAA+B,EAAA,GAF7BzB,IAAI;AAkDV,MAAM0B,eAAe,GAAIrB,KAAK,IAAK;EAC/B,OAAO;IACHF,QAAQ,EAAEE,KAAK,CAACF;EACpB,CAAC;AACL,CAAC;AAED,eAAeX,OAAO,CAClBkC,eAAe,EACf,IACJ,CAAC,CAAC1B,IAAI,CAAC;AAAC,IAAAyB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}