{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_DETAIL, GET_POKEMON_BY_NAME, GET_ALL_TYPES, CLEAR_DETAIL } from \"./actions\";\nconst initialState = {\n  allPokemons: [],\n  allTypes: [],\n  detail: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //switch que evalua el action type\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload\n      };\n    case GET_POKEMON_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case CLEAR_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    // case GET_POKEMON_BY_NAME:\n    //     return { ...state, allPokemons: action.payload};\n    case GET_POKEMON_BY_NAME:\n      try {\n        const pokeName = action.payload[0].name;\n        const busqueda = state.filtered.filter(pokemon2 => {\n          const fil2 = pokemon2.name.includes(pokeName);\n          if (fil2) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        return {\n          ...state,\n          allPokemons: [...busqueda]\n        };\n      } catch (error) {\n        throw new Error(\"Personaje no encontrado\");\n      }\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;\n\n//El reducer es una funcion que es quien sabe que hacerle al estado global. Lo recibe y recibe la action que dice que hacer\n//para que finalmente se ejecuten estas funciones, debemos montarlas en el HOME","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_DETAIL","GET_POKEMON_BY_NAME","GET_ALL_TYPES","CLEAR_DETAIL","initialState","allPokemons","allTypes","detail","reducer","state","arguments","length","undefined","action","type","payload","pokeName","name","busqueda","filtered","filter","pokemon2","fil2","includes","error","Error"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/redux/reducer.js"],"sourcesContent":["import {GET_ALL_POKEMONS, GET_POKEMON_DETAIL, GET_POKEMON_BY_NAME, GET_ALL_TYPES, CLEAR_DETAIL} from \"./actions\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    allTypes: [],\r\n    detail: [],\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch (action.type) { //switch que evalua el action type\r\n        case GET_ALL_POKEMONS:\r\n            return { ...state, allPokemons: action.payload};\r\n        case GET_POKEMON_DETAIL:\r\n            return { ...state, detail: action.payload};\r\n        case CLEAR_DETAIL:\r\n            return { ...state, detail: {} };\r\n        // case GET_POKEMON_BY_NAME:\r\n        //     return { ...state, allPokemons: action.payload};\r\n        case GET_POKEMON_BY_NAME:\r\n            try{\r\n                const pokeName = action.payload[0].name\r\n                const busqueda = state.filtered.filter((pokemon2)=>{\r\n                    const fil2 = pokemon2.name.includes(pokeName)\r\n                    if(fil2) {\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n                return {\r\n                    ...state, allPokemons: [...busqueda]\r\n                }\r\n            } catch (error){\r\n                throw new Error(\"Personaje no encontrado\")\r\n            }\r\n        case GET_ALL_TYPES:\r\n            return { ...state, allTypes: action.payload};\r\n    \r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//El reducer es una funcion que es quien sabe que hacerle al estado global. Lo recibe y recibe la action que dice que hacer\r\n//para que finalmente se ejecuten estas funciones, debemos montarlas en el HOME"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,YAAY,QAAO,WAAW;AAEhH,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAiC;EAAA,IAAhCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IAAI;IACnB,KAAKf,gBAAgB;MACjB,OAAO;QAAE,GAAGU,KAAK;QAAEJ,WAAW,EAAEQ,MAAM,CAACE;MAAO,CAAC;IACnD,KAAKf,kBAAkB;MACnB,OAAO;QAAE,GAAGS,KAAK;QAAEF,MAAM,EAAEM,MAAM,CAACE;MAAO,CAAC;IAC9C,KAAKZ,YAAY;MACb,OAAO;QAAE,GAAGM,KAAK;QAAEF,MAAM,EAAE,CAAC;MAAE,CAAC;IACnC;IACA;IACA,KAAKN,mBAAmB;MACpB,IAAG;QACC,MAAMe,QAAQ,GAAGH,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,IAAI;QACvC,MAAMC,QAAQ,GAAGT,KAAK,CAACU,QAAQ,CAACC,MAAM,CAAEC,QAAQ,IAAG;UAC/C,MAAMC,IAAI,GAAGD,QAAQ,CAACJ,IAAI,CAACM,QAAQ,CAACP,QAAQ,CAAC;UAC7C,IAAGM,IAAI,EAAE;YACL,OAAO,IAAI;UACf,CAAC,MAAM;YACH,OAAO,KAAK;UAChB;QACJ,CAAC,CAAC;QACF,OAAO;UACH,GAAGb,KAAK;UAAEJ,WAAW,EAAE,CAAC,GAAGa,QAAQ;QACvC,CAAC;MACL,CAAC,CAAC,OAAOM,KAAK,EAAC;QACX,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,KAAKvB,aAAa;MACd,OAAO;QAAE,GAAGO,KAAK;QAAEH,QAAQ,EAAEO,MAAM,CAACE;MAAO,CAAC;IAEhD;MACI,OAAO;QAAE,GAAGN;MAAM,CAAC;EAC3B;AACJ,CAAC;AAED,eAAeD,OAAO;;AAEtB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}