{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport style from \"./Home.module.css\";\nimport { getAllPokemons } from \"../../redux/actions\";\nimport Pagination from \"../../components/Paginacion/Paginacion\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\n\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const [currentPage, setCurrentPage] = useState(1); //los creamos para controlar la pagina actual del paginado\n  const pokemonsPerPage = 12;\n  const [loading, setLoading] = useState(true); //creamos un estado para manejar la demora\n\n  const handlePaginate = pageNumber => {\n    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.length > 0 && allPokemons.slice(\n  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\n  indexOfFirstPokemon, indexOfLastPokemon);\n  const changeLoading = () => {\n    //si la demora en cargar el home es mayor a lo especificado, metemos el loading\n    setTimeout(() => {\n      setLoading(false);\n    }, 6000);\n  };\n  if (loading) {\n    changeLoading();\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.HomeBackground,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          pokemonsPerPage: pokemonsPerPage,\n          totalPokemons: allPokemons.length,\n          currentPage: currentPage,\n          handlePaginate: handlePaginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        pokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n  ;\n};\n_s(Home, \"urx8UOtsM23hHI1l43BMMqLIe80=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","React","useState","useDispatch","useSelector","style","getAllPokemons","Pagination","Loading","jsxDEV","_jsxDEV","Home","_s","dispatch","allPokemons","state","currentPage","setCurrentPage","pokemonsPerPage","loading","setLoading","handlePaginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","length","slice","changeLoading","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","className","HomeBackground","children","totalPokemons","pokemons","_c","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport style from \"./Home.module.css\";\r\nimport { getAllPokemons } from \"../../redux/actions\";\r\nimport Pagination from \"../../components/Paginacion/Paginacion\"\r\nimport Loading from \"../../components/Loading/Loading\";\r\n\r\nconst Home = () => { //Al montar el componente HOME, debemos ejecutar las actions. Como contiene Cards, Home le pide al Store de redux que haga un cambio\r\n\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const [currentPage, setCurrentPage] = useState(1);  //los creamos para controlar la pagina actual del paginado\r\n    const pokemonsPerPage = 12;\r\n    const [loading, setLoading] = useState(true);   //creamos un estado para manejar la demora\r\n\r\n    const handlePaginate = (pageNumber) => {    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const currentPokemons = allPokemons.length > 0 && allPokemons.slice(  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\r\n        indexOfFirstPokemon,\r\n        indexOfLastPokemon\r\n    );\r\n\r\n    const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 6000);\r\n    };\r\n    \r\n    if (loading) {\r\n        changeLoading();\r\n        return <Loading></Loading>;\r\n    } else {\r\n        return (\r\n            <div className={style.HomeBackground}>\r\n                <div>\r\n                    <Pagination\r\n                        pokemonsPerPage={pokemonsPerPage}\r\n                        totalPokemons={allPokemons.length}\r\n                        currentPage={currentPage}\r\n                        handlePaginate={handlePaginate}\r\n                    />\r\n                </div>\r\n                <Cards pokemons={currentPokemons} />    {/*aca pasamos las props al Cards */}\r\n                \r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,8BAA8B;AAChD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,OAAO,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAE;;EAEjB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,WAAW,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;EACpD,MAAMgB,eAAe,GAAG,EAAE;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;;EAEhD,MAAMmB,cAAc,GAAIC,UAAU,IAAK;IAAK;IACxCL,cAAc,CAACK,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAGP,WAAW,GAAGE,eAAe,CAAC,CAAC;EAC1D,MAAMM,mBAAmB,GAAGD,kBAAkB,GAAGL,eAAe;EAChE,MAAMO,eAAe,GAAGX,WAAW,CAACY,MAAM,GAAG,CAAC,IAAIZ,WAAW,CAACa,KAAK;EAAG;EAClEH,mBAAmB,EACnBD,kBACJ,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAAI;IAC5BC,UAAU,CAAC,MAAM;MACfT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,IAAID,OAAO,EAAE;IACTS,aAAa,CAAC,CAAC;IACf,oBAAOlB,OAAA,CAACF,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAC9B,CAAC,MAAM;IACH,oBACIvB,OAAA;MAAKwB,SAAS,EAAE7B,KAAK,CAAC8B,cAAe;MAAAC,QAAA,gBACjC1B,OAAA;QAAA0B,QAAA,eACI1B,OAAA,CAACH,UAAU;UACPW,eAAe,EAAEA,eAAgB;UACjCmB,aAAa,EAAEvB,WAAW,CAACY,MAAO;UAClCV,WAAW,EAAEA,WAAY;UACzBK,cAAc,EAAEA;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNvB,OAAA,CAACV,KAAK;QAACsC,QAAQ,EAAEb;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvC,CAAC;EAEd;EAAC;AACL,CAAC;AAAArB,EAAA,CA5CKD,IAAI;EAAA,QAEWR,WAAW,EACRC,WAAW;AAAA;AAAAmC,EAAA,GAH7B5B,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}