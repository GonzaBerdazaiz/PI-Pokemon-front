{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\Henry\\\\PI-Pokemon\\\\client\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport Cards from \"../../components/Cards/Cards\";\nimport { useState, useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport style from \"./Home.module.css\";\nimport Pagination from \"../../components/Paginacion/Paginacion\";\n//import Loading from \"../../components/Loading/Loading\";\nimport { getAllPokemons, filterPokemon } from \"../../redux/actions\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Order from \"../../components/Order/Order\";\n//import Filter from \"../../components/Filter/Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _ref => {\n  _s();\n  let {\n    pokemons\n  } = _ref;\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const allTypes = useSelector(state => state.allTypes);\n  const [currentPage, setCurrentPage] = useState(1); //los creamos para controlar la pagina actual del paginado\n  const pokemonsPerPage = 12;\n  //const [loading, setLoading] = useState(true);   \n\n  const handlePaginate = pageNumber => {\n    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.length > 0 && allPokemons.slice(\n  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\n  indexOfFirstPokemon, indexOfLastPokemon);\n  useEffect(() => {\n    dispatch(getAllPokemons());\n  }, [dispatch]);\n\n  //------------------------------------FILTRO---------------------------------------//\n  const filterType = event => {\n    const type = event.target.value;\n    dispatch(filterPokemon(type));\n  };\n  // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\n  //     setTimeout(() => {\n  //       setLoading(false);\n  //     }, 6000);\n  // };\n\n  // if (loading) {\n  //     changeLoading();\n  //     return <Loading></Loading>;\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.HomeBackground,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.PaginationOrdenContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.FilterContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.LabelFilter,\n            children: \"Filter by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: filterType,\n            className: style.SelectorFilter,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"ALL \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n              label: \"Type\",\n              \"font-weight\": \"bold\",\n              disabled: true,\n              selected: true\n            }, 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), allTypes === null || allTypes === void 0 ? void 0 : allTypes.map(type => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                name: type.id,\n                value: type.name,\n                children: type.name\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          pokemonsPerPage: pokemonsPerPage,\n          totalPokemons: allPokemons.length,\n          currentPage: currentPage,\n          handlePaginate: handlePaginate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Order, {\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        pokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n  //};\n};\n_s(Home, \"xoT+oDUV8jgqVkCKdDr2iCknvOQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nconst mapStateToProps = state => {\n  return {\n    pokemons: state.pokemons\n  };\n};\nexport default connect(mapStateToProps, null)(Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cards","useState","useEffect","connect","useDispatch","useSelector","style","Pagination","getAllPokemons","filterPokemon","NavBar","Order","jsxDEV","_jsxDEV","Home","_ref","_s","pokemons","dispatch","allPokemons","state","allTypes","currentPage","setCurrentPage","pokemonsPerPage","handlePaginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","length","slice","filterType","event","type","target","value","className","HomeBackground","children","fileName","_jsxFileName","lineNumber","columnNumber","PaginationOrdenContainer","FilterContainer","LabelFilter","onChange","SelectorFilter","label","disabled","selected","map","name","id","totalPokemons","_c","mapStateToProps","$RefreshReg$"],"sources":["C:/Users/gonza/Desktop/Henry/PI-Pokemon/client/src/views/Home/Home.jsx"],"sourcesContent":["import Cards from \"../../components/Cards/Cards\";\r\nimport { useState, useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport style from \"./Home.module.css\";\r\nimport Pagination from \"../../components/Paginacion/Paginacion\"\r\n//import Loading from \"../../components/Loading/Loading\";\r\nimport { getAllPokemons, filterPokemon } from \"../../redux/actions\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport Order from \"../../components/Order/Order\";\r\n//import Filter from \"../../components/Filter/Filter\";\r\n\r\nconst Home = ({pokemons}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const allPokemons = useSelector((state) => state.allPokemons);\r\n    const allTypes = useSelector(state=>state.allTypes)\r\n    const [currentPage, setCurrentPage] = useState(1);  //los creamos para controlar la pagina actual del paginado\r\n    const pokemonsPerPage = 12;\r\n    //const [loading, setLoading] = useState(true);   \r\n\r\n    const handlePaginate = (pageNumber) => {    //recibe el num de pag y actualiza el estado y lo pasamos como prop al Pagination\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; //calculamos el primer y ultimo indice de la pagina para ver cuales son los pokemones de la pag actual\r\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\r\n    const currentPokemons = allPokemons.length > 0 && allPokemons.slice(  //con slice obtenemos una porcion de allPokemons, los q corresponden a la pag actual\r\n        indexOfFirstPokemon,\r\n        indexOfLastPokemon\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPokemons());\r\n    }, [dispatch])\r\n\r\n    //------------------------------------FILTRO---------------------------------------//\r\n    const filterType = (event) => {\r\n        const type = event.target.value;\r\n        dispatch(filterPokemon(type));\r\n    };\r\n    // const changeLoading = () => {   //si la demora en cargar el home es mayor a lo especificado, metemos el loading\r\n    //     setTimeout(() => {\r\n    //       setLoading(false);\r\n    //     }, 6000);\r\n    // };\r\n    \r\n    // if (loading) {\r\n    //     changeLoading();\r\n    //     return <Loading></Loading>;\r\n    // } else {\r\n    \r\n        return (\r\n            <div className={style.HomeBackground}>\r\n                <NavBar/>\r\n                <div>\r\n                    <div className={style.PaginationOrdenContainer}>\r\n                        <div className={style.FilterContainer}>\r\n                            <p className={style.LabelFilter}>Filter by</p>\r\n                            <select onChange={filterType} className={style.SelectorFilter}>\r\n                                <option value=\"all\">ALL </option> \r\n                                <optgroup key={0} label=\"Type\" font-weight=\"bold\" disabled selected />\r\n                                {allTypes?.map((type) => {\r\n                                    return (\r\n                                        <option key={type.id} name={type.id} value={type.name}>\r\n                                        {type.name}\r\n                                        </option>\r\n                                    )\r\n                                })}                \r\n                            </select>\r\n                        </div>\r\n                        <Pagination\r\n                            pokemonsPerPage={pokemonsPerPage}\r\n                            totalPokemons={allPokemons.length}\r\n                            currentPage={currentPage}\r\n                            handlePaginate={handlePaginate}\r\n                        />\r\n                        <Order setCurrentPage={setCurrentPage}></Order>\r\n                    </div>\r\n                    <Cards pokemons={currentPokemons} />\r\n                </div> \r\n            </div>\r\n        );\r\n    //};\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Home);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}